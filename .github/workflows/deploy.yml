name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install the dependencies
        run: |
          python -m pip install -r requirements.txt
      - name: Build the JupyterLite site
        run: |
          cp README.md content
          echo $CONDA_PREFIX
          mkdir -p /home/runner/.jupyter/lab/user-settings
          mkdir -p /opt/hostedtoolcache/Python/3.10.13/x64/share/jupyter/lab/settings
          mkdir -p dist/build/lab/settings
          mkdir -p dist/lab/settings
          echo '{"@jupyterlab/apputils-extension:themes": {"theme": "JupyterLab Dark"}}' > /home/runner/.jupyter/lab/user-settings/overrides.json
          echo '{"@jupyterlab/apputils-extension:themes": {"theme": "JupyterLab Dark"}}' > /opt/hostedtoolcache/Python/3.10.13/x64/share/jupyter/lab/settings/overrides.json
          echo '{"@jupyterlab/apputils-extension:themes": {"theme": "JupyterLab Dark"}}' > dist/build/lab/settings/overrides.json
          echo '{"@jupyterlab/apputils-extension:themes": {"theme": "JupyterLab Dark"}}' > dist/lab/settings/overrides.json
          jupyter lite build --contents content --output-dir dist
          mkdir -p dist/build/lab/settings
          mkdir -p dist/lab/settings
          echo '{"@jupyterlab/apputils-extension:themes": {"theme": "JupyterLab Dark"}}' > dist/build/lab/settings/overrides.json
          echo '{"@jupyterlab/apputils-extension:themes": {"theme": "JupyterLab Dark"}}' > dist/lab/settings/overrides.json
          find dist -type d -iname lab\*
          find /home/runner/work/tutorials-and-guides/ -type d -iname lab
          find dist -type f -iname *.css
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
